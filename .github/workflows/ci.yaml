name: main
on:
  pull_request:
  push:
    branches:
      - 'main'
    tags-ignore:
      - '*'
jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Test
        run: make build
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Lint
        run: make lint
  check-goreleaser-config:
    name: Check goreleaser.yml
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - uses: goreleaser/goreleaser-action@v5.0.0
        with:
          version: v1.21.2
          args: check -f .goreleaser.yml
  test:
    name: Test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Test
        run: make test
  e2e:
    name: End-to-End Tests
    strategy:
      matrix:
        k8s-version: ["1.26.6", "1.27.3", "1.28.0"]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - run: make start KUBERNETES_VERSION=${{ matrix.k8s-version }}
        working-directory: e2e
      - run: make test
        working-directory: e2e
      - run: make logs
        working-directory: e2e
        if: always()
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: logs-${{ matrix.k8s-version }}.tar.gz
          path: e2e/logs.tar.gz
  dry-run:
    name: Dry-run release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Setup tag for goreleaser
        run: |
          echo "GORELEASER_CURRENT_TAG=$(git describe --tags --abbrev=0 --match "v*" || echo v0.0.0)" >> $GITHUB_ENV
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v5.0.0
        with:
          version: v1.21.2
          args: --snapshot --skip-publish --rm-dist
      - name: Test built containers
        run: make container-structure-test
